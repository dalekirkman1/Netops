---
- name: NXOS Switch Upgrade
  hosts: nxos
  gather_facts: yes
 
  vars_prompt:
  # SWITCH VARS #
   - name: switch_username
     prompt: "Username?"
     private: False
   - name: switch_password
     prompt: "Password?"
   - name: firmware_nxos_filename
     prompt: "nxos firmware filename?"
  # SCP SERVER VARS #      
   - name: scp_ip_address
     prompt: "SCP Server IP Address?" 
   - name: scp_user
     prompt: "SCP Server Username?" 
   - name: scp_password
     prompt: "SCP Server Password?"
   - name: scp_file_location
     prompt: "filepath on scp server (include file to be copied)?" 
     
   roles:
    - nxos_upgrade 
  
tasks:
#  1. BACKUPS CONFIG
#  2. COPY NXOS UPGRADE FILE
#  3. CHECK MD5
#  4. CHECK RUNNING NXOS VERSION
#  5. CHECK FOR CONFIGURATION INCOMPATIBILITY
#  6. UPDATE NXOS BOOT OPTION
#  7. SAVE CONFIG
#  8. UPGRADE
#  9. POST UPGRADE CHECK   
 
    # 1.BACKUPS CONFIG #
    - name: run show running-config
    cisco.ios.ios_command:
      commands: 
      - show running-config
    register: config
   
    - name: save output to local directory
    copy:
      content: "{{ config.stdout | replace('\\n', '\n') }}"
      dest: "/tmp/Network/{{ inventory_hostname }}_running-config.ios"
 
    # 2.COPY NXOS UPGRADE FILE  #
      - name: initiate file copy from device
        cisco.nxos.nxos_file_copy:
            file_pull: true
            file_pull_protocol: scp
            local_file: {{ firmware_nxos_filename }}
            remote_file: {{ scp_file_location }}
            remote_scp_server: {{ scp_ip_address }}
            remote_scp_server_user: {{ scp_user }}
            remote_scp_server_password: {{ scp_password }} 
            vrf: management
 
    # 3.CHECK MD5 #
      - name: Check MD5 Sum
        nxos_command:
          commands:
            - "show file bootflash:{{item.file_name }} md5sum"
          provider: "{{ nxos_provider }}"
        with_items:
          - "{{ image }}"
        register: output
 
      - name: Print MD5 As Calculated On The Switch
        debug: msg="{{output['results'][0]['stdout'][0]['file_content_md5sum'][:-1]}}"
      - name: Assert that MD5 on Switch Is Correct
        assert:
          that:
            - output['results'][0]['stdout'][0]['file_content_md5sum'][:-1] == "{{ item.md5 }}"
        with_items:
          - "{{ image }}"
 
    ---
    # 4.CHECK RUNNING NXOS VERSION #
        - name: Check running NXOS code version
          nxos_command:
            command: show version
            host: "{{ inventory_hostname }}"
            username: "{{ switch_username }}"
            password: "{{ switch_password }}"
            type: show
        register: show_version
        when: show_version is not defined
        tags:
            - nxos_upgrade
            - fw_upgrade
        
    # 5.CHECK FOR CONFIGURATION INCOMPATIBILITY #    
        - block:
            - name: Check for configuration incompatibility
              nxos_command:
                command: "show incompatibility-all nxos {{ firmware_nxos_filename }}"
                host: "{{ inventory_hostname }}"
                username: "{{ switch_username }}"
                password: "{{ switch_password }}"
                type: show
              register: nxos_incompatibility
            - name: Fail if incompatibilities are detected.
              fail:
                msg: "Incompatibilites detected in firmware upgrade: {{ nxos_incompatibility.response[0].body.TABLE_incompat_all.ROW_incompat_all }}"
            when: (firmware_nxos_filename != "{{ show_version.response[0].body.kick_file_name | basename }}") and
          (nxos_incompatibility.response[0].body.TABLE_incompat_all.ROW_incompat_all[1].Str1 != "No incompatible configurations")
 
    # 6.UPDATE NXOS BOOT OPTION #    
        - name: Set switch to boot from new NXOS
          nxos_command:
            command: "boot nxos bootflash:/{{ firmware_nxos_filename }}"
            host: "{{ inventory_hostname }}"
            username: "{{ switch_username }}"
            password: "{{ switch_password }}"
            type: config
 
    # 7.SAVE CONFIG #
        - name: Save config with new NXOS boot command
          nxos_config:
            save: True
            host: "{{ inventory_hostname }}"
            username: "{{ switch_username }}"
            password: "{{ switch_password }}"
            
    # 8.UPGRADE #
        - name: Upgrade NXOS firmware (This will take an extended period of time.)
          nxos_upgrade:
            host: "{{ inventory_hostname }}"
            username: "{{ switch_username }}"
            password: "{{ switch_password }}"
            filename: "{{ firmware_nxos_filename }}"
            type: nxos
            log: "{{ enable_logging }}"
            log_file: "{{ log_file_dir }}/{{ inventory_hostname }}-nxos_upgrade_log_file.txt"
 
        - name: Wait for Nexus Switch to reload
          wait_for:
            host: "{{ inventory_hostname }}"
            port: 80
            state: started
            delay: 60
            timeout: 300
            
    # 9.POST UPGRADE CHECK # 
        
        - name: Check running NXOS code version
          nxos_command:
            command: show version
            host: "{{ inventory_hostname }}"
            username: "{{ switch_username }}"
            password: "{{ switch_password }}"
            type: show
        register: new_show_version
 
        - name: Fail if running firmware is incorrect
          fail:
            msg: "Firmware was not upgraded"
        when: (firmware_nxos_filename != "{{ show_version.response[0].body.kick_file_name | basename }}") and
          (firmware_nxos_filename != "{{ new_show_version.response[0].body.kick_file_name | basename }}")
        when: firmware_nxos_filename != "{{ show_version.response[0].body.kick_file_name | basename }}"
        tags:
            - nxos_upgrade
            - fw_upgrade
